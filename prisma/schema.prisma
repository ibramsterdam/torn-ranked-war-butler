generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id
  name      String?
  apiKey    ApiKey?
  faction   Faction? @relation(fields: [factionId], references: [id])
  factionId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  lastActionStatus    String?
  lastActionRelative  String?
  lastActionTimestamp BigInt?

  statusDescription String?
  statusDetails     String?
  statusState       String?
  statusUntil       BigInt?
}

model DiscordServer {
  id              BigInt                    @id @unique
  name            String
  isWhitelisted   Boolean                   @default(false)
  factionAmount   Int                       @default(1)
  apiKeyAmount    Int                       @default(1)
  apiKeys         ApiKey[]
  factions        FactionsOnDiscordServer[]
  discordCategory DiscordCategory?
  discordChannel  DiscordChannel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ApiKey {
  id              Int           @id @default(autoincrement())
  value           String        @unique
  accessLevel     String        @default("Public")
  user            User          @relation(fields: [userId], references: [id])
  userId          Int           @unique
  discordServer   DiscordServer @relation(fields: [discordServerId], references: [id])
  discordServerId BigInt

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DiscordCategory {
  id              BigInt           @id
  name            String
  discordChannel  DiscordChannel[]
  discordServer   DiscordServer    @relation(fields: [discordServerId], references: [id])
  discordServerId BigInt           @unique
}

model DiscordChannel {
  id   BigInt @id
  name String

  discordCategory   DiscordCategory @relation(fields: [discordCategoryId], references: [id])
  discordCategoryId BigInt

  DiscordServer   DiscordServer @relation(fields: [discordServerId], references: [id])
  discordServerId BigInt

  faction   Faction? @relation(fields: [factionId], references: [id])
  factionId Int?

  factionsOnDiscordServer FactionsOnDiscordServer[]
}

model Faction {
  id   Int    @id
  name String

  members        User[]
  discordServers FactionsOnDiscordServer[]
  DiscordChannel DiscordChannel[]
}

model FactionsOnDiscordServer {
  discordServer   DiscordServer @relation(fields: [discordServerId], references: [id])
  discordServerId BigInt
  faction         Faction?      @relation(fields: [factionId], references: [id])
  factionId       Int

  discordChannel   DiscordChannel @relation(fields: [discordChannelId], references: [id])
  discordChannelId BigInt         @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([factionId, discordServerId])
}
